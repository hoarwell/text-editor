{"version":3,"sources":["App.js","index.js"],"names":["App","contentRef","useRef","handleMenu","e","currentTarget","name","value","current","focus","console","log","classList","toggle","insertStyle","style","document","execCommand","insertImage","result","contentChange","innerHTML","target","useEffect","addEventListener","className","type","placeholder","onChange","require","onClick","htmlFor","id","accept","file","files","Compressor","quality","success","converted","reader","FileReader","readAsDataURL","onloadend","finishedEvent","selected","disabled","hidden","data-value","contentEditable","ref","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5090dd5e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Compressor from 'compressorjs';\nimport './App.css';\n\nfunction App() {\n  const contentRef = useRef();\n  \n  const handleMenu = (e) => {\n    const { value, name } = e.currentTarget;\n    contentRef.current.focus();\n    console.log(e.currentTarget)\n    e.currentTarget.classList.toggle('selected');\n    if( name === \"b\") {\n      insertStyle(\"bold\");\n    } else if ( name === \"i\") {\n      insertStyle(\"italic\");\n    } else if ( name === \"u\") {\n      insertStyle(\"underline\");\n    } else if (name === \"s\") {\n      insertStyle(\"strikeThrough\");\n    } else if ( name === \"ol\") {\n      insertStyle(\"insertOrderedList\");\n    } else if ( name === \"ul\") {\n      insertStyle(\"insertUnorderedList\");\n    }\n  }\n\n  const handleAlign = (e) => {\n    const { value, name } = e.target;\n    contentRef.current.focus();\n    console.log(name);\n    if ( value === \"left\" ) {\n      insertStyle(\"justifyLeft\");\n    } else if ( value === \"center\") {\n      insertStyle(\"justifyCenter\");\n    } else if ( value === \"right\") {\n      insertStyle(\"justifyRight\");\n    } else if ( value === \"full\") {\n      insertStyle(\"justifyFull\");\n    }\n  }\n\n  const fileChange = (e) => {\n    const { files } = e.target;\n    const file = files[0];\n    contentRef.current.focus();\n    new Compressor(file, {\n      quality: 0.6,\n      success: (converted) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(converted);\n        reader.onloadend = (finishedEvent) => {\n          const { currentTarget : { result } } = finishedEvent;\n          console.log(result);\n          insertImage(result);\n        }\n      }\n    });\n  }\n\n  const insertStyle = (style) => {\n      document.execCommand(style);\n  }\n\n  const insertImage = (result) => {\n      document.execCommand('insertHTML', false, `<img className = \"content-image\" src = ${result} />`);\n  }\n\n  const contentChange = (e) =>{\n    const { innerHTML } = e.target;\n    console.log(innerHTML);\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if( name === \"title\" ){\n      console.log(value);\n    } \n  }\n\n  const handleFont = (e) => {\n    const { value } = e.target;\n    document.execCommand(\"fontName\", false, value);\n    console.log(value);\n  }\n\n  const handleFontSize = (e) => {\n    const { value, name } = e.target;\n    contentRef.current.focus();\n    console.log(value);\n  }\n\n  useEffect(() => {\n    contentRef.current.addEventListener('input', contentChange);\n  })\n\n  return (\n    <div className=\"App\">\n      <div className = \"container\">\n        <p>wysiwyg text editor</p>\n        <input className = \"title\" name = \"title\" type = \"text\" placeholder = \"title\" onChange = { handleChange } require = \"true\" />\n        <div className = \"menu\"> \n          <button className = \"bold\" name = \"b\" onClick = { handleMenu }> \n            <b>B</b>\n          </button> \n          <button className = \"italic\" name = \"i\" onClick = { handleMenu }>\n            <i>I</i>\n          </button> \n          <button className = \"underline\" name = \"u\" onClick = { handleMenu }>\n            <u>U</u>\n          </button> \n          <button className = \"strike\" name = \"s\" onClick = { handleMenu }>\n            <s>S</s>\n          </button> \n          <button className = \"ordered-list\" name = \"ol\" onClick = { handleMenu }>\n            OL\n          </button>\n          <button className = \"unordered-list\" name = \"ul\" onClick = { handleMenu }>\n            UL\n          </button>\n          <label htmlFor = \"file\">image</label>\n          <input className = \"file\" id = \"file\" name = \"file\" type = \"file\" accept = \"image/*\" onChange = { fileChange } />\n          <select onChange = { handleFont }>\n            <option value = \"\" selected disabled hidden>choose font</option>\n            <option value = \"Arial\">Arial</option>\n            <option value = \"Helvetica\">Helvetica</option>\n            <option value = \"Courier New\">Courier New</option>\n            <option value = \"sans-serif\">sans-serif</option>\n            <option value = \"Georgia\">Georgia</option>\n            <option value = \"Times\">Times</option>\n            <option value = \"Tahoma\">Tahoma</option>\n            <option value = \"Verdana\">Verdana</option>\n            <option value = \"Garamond\">Garamond</option>\n          </select>\n          <select id=\"font-size\" onChange = { handleFontSize }> \n            <option data-value=\"1\">10pt</option> \n            <option data-value=\"2\">13pt</option> \n            <option data-value=\"3\">16pt</option> \n            <option data-value=\"4\">18pt</option> \n            <option data-value=\"5\">24pt</option> \n            <option data-value=\"6\">32pt</option> \n            <option data-value=\"7\">48pt</option> \n          </select> \n          <select onChange = { handleAlign }>\n            <option value = \"\" selected disabled hidden>text align</option>\n            <option value = \"left\">left</option>\n            <option value = \"right\">right</option>\n            <option value = \"center\">center</option>\n            <option value = \"full\">full</option>\n          </select>\n        </div>\n        <div className = \"content\" name = \"content\" contentEditable=\"true\" ref = { contentRef }></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}