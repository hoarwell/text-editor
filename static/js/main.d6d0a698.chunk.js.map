{"version":3,"sources":["App.js","index.js"],"names":["App","contentRef","useRef","handleMenu","e","currentTarget","name","value","console","log","insertStyle","current","focus","style","document","execCommand","insertImage","result","contentChange","innerHTML","target","useEffect","addEventListener","className","type","placeholder","onChange","require","accept","file","files","Compressor","quality","success","converted","reader","FileReader","readAsDataURL","onloadend","finishedEvent","onClick","contentEditable","ref","ReactDOM","render","StrictMode","getElementById"],"mappings":"0LA+GeA,MA3Gf,WACE,IAAMC,EAAaC,mBAEbC,EAAa,SAACC,GAClB,MAAwBA,EAAEC,cAAXC,GAAf,EAAQC,MAAR,EAAeD,MACfE,QAAQC,IAAIH,GACC,MAATA,EACFI,EAAY,QACO,MAATJ,EACVI,EAAY,UACO,MAATJ,EACVI,EAAY,aACM,MAATJ,EACTI,EAAY,iBACO,OAATJ,EACVI,EAAY,qBACO,OAATJ,GACVI,EAAY,uBAEdT,EAAWU,QAAQC,SAoBfF,EAAc,SAACG,GACjBC,SAASC,YAAYF,IAGnBG,EAAc,SAACC,GACjBH,SAASC,YAAY,cAAc,EAAnC,iDAAoFE,EAApF,SAGEC,EAAgB,SAACd,GACrB,IAAQe,EAAcf,EAAEgB,OAAhBD,UACRX,QAAQC,IAAIU,IAoBd,OAJAE,qBAAU,WACRpB,EAAWU,QAAQW,iBAAiB,QAASJ,MAI7C,qBAAKK,UAAU,MAAf,SACE,sBAAKA,UAAY,YAAjB,UACE,oDACA,uBAAOA,UAAY,QAAQjB,KAAO,QAAQkB,KAAO,OAAOC,YAAc,QAAQC,SArB/D,SAACtB,GACpB,MAAwBA,EAAEgB,OAAlBd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACD,UAATD,GACFE,QAAQC,IAAIF,IAkBgGoB,QAAU,SACpH,uBAAOJ,UAAY,OAAOjB,KAAO,OAAOkB,KAAO,OAAOI,OAAS,UAAUF,SApD5D,SAACtB,GAClB,IACMyB,EADYzB,EAAEgB,OAAZU,MACW,GACnB,IAAIC,IAAWF,EAAM,CACnBG,QAAS,GACTC,QAAS,SAACC,GACR,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,UAAY,SAACC,GAClB,IAA0BtB,EAAasB,EAA/BlC,cAAkBY,OAC1BT,QAAQC,IAAIQ,GACZD,EAAYC,UA0Cd,sBAAKM,UAAY,OAAjB,UACE,wBAAQA,UAAY,OAAOjB,KAAO,IAAIkC,QAAYrC,EAAlD,SACE,oCAEF,wBAAQoB,UAAY,SAASjB,KAAO,IAAIkC,QAAYrC,EAApD,SACE,oCAEF,wBAAQoB,UAAY,YAAYjB,KAAO,IAAIkC,QAAYrC,EAAvD,SACE,oCAEF,wBAAQoB,UAAY,SAASjB,KAAO,IAAIkC,QAAYrC,EAApD,SACE,oCAEF,wBAAQoB,UAAY,eAAejB,KAAO,KAAKkC,QAAYrC,EAA3D,gBAGA,wBAAQoB,UAAY,iBAAiBjB,KAAO,KAAKkC,QAAYrC,EAA7D,gBAGA,yBAAQuB,SAnCG,SAACtB,GAClB,IAAQG,EAAUH,EAAEgB,OAAZb,MACRO,SAASC,YAAY,YAAY,EAAOR,GACxCC,QAAQC,IAAIF,IAgCN,UACE,wBAAQA,MAAQ,QAAhB,mBACA,wBAAQA,MAAQ,YAAhB,uBACA,wBAAQA,MAAQ,cAAhB,yBACA,wBAAQA,MAAQ,aAAhB,8BAGJ,qBAAKgB,UAAY,UAAUjB,KAAO,UAAUmC,gBAAgB,OAAOC,IAAQzC,UCrGnF0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASgC,eAAe,U","file":"static/js/main.d6d0a698.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Compressor from 'compressorjs';\nimport './App.css';\n\nfunction App() {\n  const contentRef = useRef();\n  \n  const handleMenu = (e) => {\n    const { value, name } = e.currentTarget;\n    console.log(name);\n    if( name === \"b\") {\n      insertStyle(\"bold\");\n    } else if ( name === \"i\") {\n      insertStyle(\"italic\");\n    } else if ( name === \"u\") {\n      insertStyle(\"underline\");\n    } else if (name === \"s\") {\n      insertStyle(\"strikeThrough\");\n    } else if ( name === \"ol\") {\n      insertStyle(\"insertOrderedList\");\n    } else if ( name === \"ul\") {\n      insertStyle(\"insertUnorderedList\");\n    }\n    contentRef.current.focus();\n  }\n\n  const fileChange = (e) => {\n    const { files } = e.target;\n    const file = files[0];\n    new Compressor(file, {\n      quality: 0.6,\n      success: (converted) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(converted);\n        reader.onloadend = (finishedEvent) => {\n          const { currentTarget : { result } } = finishedEvent;\n          console.log(result);\n          insertImage(result)\n        }\n      }\n    })\n  }\n\n  const insertStyle = (style) => {\n      document.execCommand(style);\n    }\n\n  const insertImage = (result) => {\n      document.execCommand('insertHTML', false, `<img className = \"content-image\" src = ${result} />`);\n  }\n\n  const contentChange = (e) =>{\n    const { innerHTML } = e.target;\n    console.log(innerHTML);\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if( name === \"title\" ){\n      console.log(value);\n    } \n  }\n\n  const handleFont = (e) => {\n    const { value } = e.target;\n    document.execCommand(\"fontName\", false, value);\n    console.log(value);\n  }\n\n  useEffect(() => {\n    contentRef.current.addEventListener('input', contentChange);\n  })\n\n  return (\n    <div className=\"App\">\n      <div className = \"container\">\n        <p>wysiwyg text editor</p>\n        <input className = \"title\" name = \"title\" type = \"text\" placeholder = \"title\" onChange = { handleChange } require = \"true\" />\n        <input className = \"file\" name = \"file\" type = \"file\" accept = \"image/*\" onChange = { fileChange }/>\n        <div className = \"menu\"> \n          <button className = \"bold\" name = \"b\" onClick = { handleMenu }> \n            <b>B</b>\n          </button> \n          <button className = \"italic\" name = \"i\" onClick = { handleMenu }>\n            <i>I</i>\n          </button> \n          <button className = \"underline\" name = \"u\" onClick = { handleMenu }>\n            <u>U</u>\n          </button> \n          <button className = \"strike\" name = \"s\" onClick = { handleMenu }>\n            <s>S</s>\n          </button> \n          <button className = \"ordered-list\" name = \"ol\" onClick = { handleMenu }>\n            OL\n          </button> \n          <button className = \"unordered-list\" name = \"ul\" onClick = { handleMenu }>\n            UL\n          </button>\n          <select onChange = { handleFont }>\n            <option value = \"Arial\">Arial</option>\n            <option value = \"Helvetica\">Helvetica</option>\n            <option value = \"Courier New\">Courier New</option>\n            <option value = \"sans-serif\">sans-serif</option>\n          </select>\n        </div>\n        <div className = \"content\" name = \"content\" contentEditable=\"true\" ref = { contentRef }></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}