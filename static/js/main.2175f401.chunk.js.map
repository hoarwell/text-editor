{"version":3,"sources":["App.js","index.js"],"names":["App","contentRef","useRef","callback","mutationsList","observer","mutation","type","removedNodes","console","log","target","ownerDocument","images","imagesArray","sorted","Set","i","length","currentSrc","src","useEffect","MutationObserver","observe","current","attributes","childList","subtree","disconnect","handleMenu","e","currentTarget","name","value","focus","classList","toggle","insertStyle","style","document","execCommand","insertImage","result","contentChange","innerHTML","addEventListener","className","placeholder","onChange","require","onClick","htmlFor","id","accept","file","files","Compressor","quality","success","converted","reader","FileReader","readAsDataURL","onloadend","finishedEvent","selected","disabled","hidden","contentEditable","ref","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2175f401.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Compressor from 'compressorjs';\nimport './App.css';\n\nfunction App() {\n  const contentRef = useRef();\n\n  // Callback function to execute when mutations are observed\n  const callback = function(mutationsList, observer) {\n      for(const mutation of mutationsList) {\n        if (mutation.type === 'childList' && mutation.removedNodes[0]) {\n          console.log(mutation.target.ownerDocument.images)\n          let imagesArray = [...mutation.target.ownerDocument.images];\n          let sorted = [...new Set(imagesArray)];\n          console.log(sorted)\n\n          for(let i = 0; i < imagesArray.length; i++ ){\n            if(imagesArray[i].currentSrc === mutation.removedNodes[0].src){\n              console.log('중복 있습니다.', i) // 중복이 있으면 storage 저장 할 필요 없음\n            } else {\n              console.log('중복 없습니다.') // 중복이 없으면 add database\n            }\n          }\n        }\n      }\n  };\n\n  // check if imagesArray has mutation.removedNodes[0].src alraedy and if it has make it one\n\n  useEffect(() => {\n      // Create an observer instance linked to the callback function\n      const observer = new MutationObserver(callback);\n      observer.observe(contentRef.current, { attributes: true, childList: true, subtree: true });\n      return () => observer.disconnect();\n  })\n\n  const handleMenu = (e) => {\n    const { value, name } = e.currentTarget;\n    contentRef.current.focus();\n    console.log(e.currentTarget)\n    e.currentTarget.classList.toggle('selected');\n    if( name === \"b\") {\n      insertStyle(\"bold\");\n    } else if ( name === \"i\") {\n      insertStyle(\"italic\");\n    } else if ( name === \"u\") {\n      insertStyle(\"underline\");\n    } else if (name === \"s\") {\n      insertStyle(\"strikeThrough\");\n    } else if ( name === \"ol\") {\n      insertStyle(\"insertOrderedList\");\n    } else if ( name === \"ul\") {\n      insertStyle(\"insertUnorderedList\");\n    }\n  }\n\n  const handleAlign = (e) => {\n    const { value, name } = e.target;\n    contentRef.current.focus();\n    console.log(name);\n    document.execCommand(\"fontSize\", false, value);\n    if ( value === \"left\" ) {\n      insertStyle(\"justifyLeft\");\n    } else if ( value === \"center\") {\n      insertStyle(\"justifyCenter\");\n    } else if ( value === \"right\") {\n      insertStyle(\"justifyRight\");\n    } else if ( value === \"full\") {\n      insertStyle(\"justifyFull\");\n    }\n  }\n\n  const fileChange = (e) => {\n    const { files } = e.target;\n    const file = files[0];\n    contentRef.current.focus();\n    new Compressor(file, {\n      quality: 0.6,\n      success: (converted) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(converted);\n        reader.onloadend = (finishedEvent) => {\n          const { currentTarget : { result } } = finishedEvent;\n          insertImage(result);\n        }\n      }\n    });\n  }\n\n  const insertStyle = (style) => {\n      document.execCommand(style);\n  }\n\n  const insertImage = (result) => {\n      document.execCommand('insertHTML', false, `<img className = \"content-image\" id = \"imgid..\" src = ${result} />`);\n  }\n\n  const contentChange = (e) =>{\n    const { innerHTML } = e.target;\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if( name === \"title\" ){\n      console.log(value);\n    } \n  }\n\n  const handleFont = (e) => {\n    const { value } = e.target;\n    document.execCommand(\"fontName\", false, value);\n    console.log(value);\n  }\n\n  const handleFontSize = (e) => {\n    const { value, name } = e.target;\n    contentRef.current.focus();\n    document.execCommand(\"fontSize\", false, value);\n  }\n\n  useEffect(() => {\n    contentRef.current.addEventListener('input', contentChange);\n  })\n\n  return (\n    <div className=\"App\">\n      <div className = \"container\">\n        <p>wysiwyg text editor</p>\n        <input className = \"title\" name = \"title\" type = \"text\" placeholder = \"title\" onChange = { handleChange } require = \"true\" />\n        <div className = \"menu\"> \n          <button className = \"bold\" name = \"b\" onClick = { handleMenu }> \n            <b>B</b>\n          </button> \n          <button className = \"italic\" name = \"i\" onClick = { handleMenu }>\n            <i>I</i>\n          </button> \n          <button className = \"underline\" name = \"u\" onClick = { handleMenu }>\n            <u>U</u>\n          </button> \n          <button className = \"strike\" name = \"s\" onClick = { handleMenu }>\n            <s>S</s>\n          </button> \n          <button className = \"ordered-list\" name = \"ol\" onClick = { handleMenu }>\n            OL\n          </button>\n          <button className = \"unordered-list\" name = \"ul\" onClick = { handleMenu }>\n            UL\n          </button>\n          <label htmlFor = \"file\">image</label>\n          <input className = \"file\" id = \"file\" name = \"file\" type = \"file\" accept = \"image/*\" onChange = { fileChange } />\n          <select onChange = { handleFont }>\n            <option value = \"\" selected disabled hidden>font</option>\n            <option value = \"Arial\">Arial</option>\n            <option value = \"Helvetica\">Helvetica</option>\n            <option value = \"Courier New\">Courier New</option>\n            <option value = \"sans-serif\">sans-serif</option>\n            <option value = \"Georgia\">Georgia</option>\n            <option value = \"Times\">Times</option>\n            <option value = \"Tahoma\">Tahoma</option>\n            <option value = \"Verdana\">Verdana</option>\n            <option value = \"Garamond\">Garamond</option>\n          </select>\n          <select onChange = { handleFontSize }>\n          <option value = \"\" selected disabled hidden>font size</option>\n            <option value=\"1\">10pt</option> \n            <option value=\"2\">13pt</option> \n            <option value=\"3\">16pt</option> \n            <option value=\"4\">18pt</option> \n            <option value=\"5\">24pt</option> \n            <option value=\"6\">32pt</option> \n            <option value=\"7\">48pt</option> \n          </select> \n          <select onChange = { handleAlign }>\n            <option value = \"\" selected disabled hidden>text align</option>\n            <option value = \"left\">left</option>\n            <option value = \"right\">right</option>\n            <option value = \"center\">center</option>\n            <option value = \"full\">full</option>\n          </select>\n        </div>\n        <div className = \"content\" name = \"content\" contentEditable=\"true\" ref = { contentRef }></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}