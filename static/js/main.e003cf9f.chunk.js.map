{"version":3,"sources":["App.js","index.js"],"names":["App","contentRef","useRef","handleMenu","e","name","target","console","log","insertStyle","style","document","execCommand","current","focus","preventScroll","insertImage","result","contentChange","innerHTML","useEffect","addEventListener","className","type","placeholder","onChange","value","require","accept","file","files","Compressor","quality","success","converted","reader","FileReader","readAsDataURL","onloadend","finishedEvent","currentTarget","class","onClick","contentEditable","ref","ReactDOM","render","StrictMode","getElementById"],"mappings":"0LAgHeA,MA5Gf,WACE,IAAMC,EAAaC,mBAEbC,EAAa,SAACC,GAClB,IAAQC,EAASD,EAAEE,OAAXD,KACRE,QAAQC,IAAIH,GACC,MAATA,EACFI,EAAY,QACO,MAATJ,EACVI,EAAY,UACO,MAATJ,EACVI,EAAY,aACM,MAATJ,EACTI,EAAY,iBACO,OAATJ,EACVI,EAAY,qBACO,OAATJ,GACVI,EAAY,wBAqBVA,EAAc,SAACC,GACjBC,SAASC,YAAYF,GACrBT,EAAWY,QAAQC,MAAM,CAAEC,eAAe,KAGxCC,EAAc,SAACC,GACjBhB,EAAWY,QAAQC,QACnBH,SAASC,YAAY,cAAc,EAAnC,iDAAoFK,EAApF,SAGEC,EAAgB,SAACd,GACrB,IAAQe,EAAcf,EAAEE,OAAhBa,UACRZ,QAAQC,IAAIW,IAqBd,OAJAC,qBAAU,WACRnB,EAAWY,QAAQQ,iBAAiB,QAASH,MAI7C,qBAAKI,UAAU,MAAf,SACE,sBAAKA,UAAY,YAAjB,UACE,oDACA,uBAAOA,UAAY,QAAQjB,KAAO,QAAQkB,KAAO,OAAOC,YAAc,QAAQC,SAtB/D,SAACrB,GACpB,MAAwBA,EAAEE,OAAlBD,EAAR,EAAQA,KAAMqB,EAAd,EAAcA,MACD,UAATrB,GACFE,QAAQC,IAAIkB,IAmBgGC,SAAO,IACjH,uBAAOL,UAAY,OAAOjB,KAAO,OAAOkB,KAAO,OAAOK,OAAS,UAAUH,SAvD5D,SAACrB,GAClB,IACMyB,EADYzB,EAAEE,OAAZwB,MACW,GACnB,IAAIC,IAAWF,EAAM,CACnBG,QAAS,GACTC,QAAS,SAACC,GACR,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,UAAY,SAACC,GAClB,IAA0BtB,EAAasB,EAA/BC,cAAkBvB,OAC1BV,QAAQC,IAAIS,GACZD,EAAYC,UA6Cd,sBAAKwB,MAAM,OAAX,UACE,wBAAQnB,UAAY,OAAOjB,KAAO,IAAIqC,QAAYvC,EAAlD,SACE,oCAEF,wBAAQmB,UAAY,SAASjB,KAAO,IAAIqC,QAAYvC,EAApD,SACE,oCAEF,wBAAQmB,UAAY,YAAYjB,KAAO,IAAIqC,QAAYvC,EAAvD,SACE,oCAEF,wBAAQmB,UAAY,SAASjB,KAAO,IAAIqC,QAAYvC,EAApD,SACE,oCAEF,wBAAQmB,UAAY,eAAejB,KAAO,KAAKqC,QAAYvC,EAA3D,gBAGA,wBAAQmB,UAAY,iBAAiBjB,KAAO,KAAKqC,QAAYvC,EAA7D,gBAGA,yBAAQsB,SApCG,SAACrB,GAClB,IAAQsB,EAAUtB,EAAEE,OAAZoB,MACRzB,EAAWY,QAAQC,QACnBH,SAASC,YAAY,YAAY,EAAOc,GACxCnB,QAAQC,IAAIkB,IAgCN,UACE,wBAAQA,MAAQ,QAAhB,mBACA,wBAAQA,MAAQ,YAAhB,uBACA,wBAAQA,MAAQ,cAAhB,+BAGJ,qBAAKJ,UAAY,UAAUjB,KAAO,UAAUsC,gBAAgB,OAAOC,IAAQ3C,UCtGnF4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASqC,eAAe,U","file":"static/js/main.e003cf9f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Compressor from 'compressorjs';\nimport './App.css';\n\nfunction App() {\n  const contentRef = useRef();\n\n  const handleMenu = (e) => {\n    const { name } = e.target;\n    console.log(name)\n    if( name === \"b\"){\n      insertStyle(\"bold\");\n    } else if ( name === \"i\"){\n      insertStyle(\"italic\");\n    } else if ( name === \"u\"){\n      insertStyle(\"underline\");\n    } else if (name === \"s\"){\n      insertStyle(\"strikeThrough\");\n    } else if ( name === \"ol\"){\n      insertStyle(\"insertOrderedList\");\n    } else if ( name === \"ul\"){\n      insertStyle(\"insertUnorderedList\");\n    } \n  }\n\n  const fileChange = (e) => {\n    const { files } = e.target;\n    const file = files[0];\n    new Compressor(file, {\n      quality: 0.6,\n      success: (converted) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(converted);\n        reader.onloadend = (finishedEvent) => {\n          const { currentTarget : { result } } = finishedEvent;\n          console.log(result);\n          insertImage(result)\n        }\n      }\n    })\n  }\n\n  const insertStyle = (style) => {\n      document.execCommand(style);\n      contentRef.current.focus({ preventScroll: true });\n  }\n\n  const insertImage = (result) => {\n      contentRef.current.focus();\n      document.execCommand('insertHTML', false, `<img className = \"content-image\" src = ${result} />`);\n  }\n\n  const contentChange = (e) =>{\n    const { innerHTML } = e.target;\n    console.log(innerHTML);\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if( name === \"title\" ){\n      console.log(value);\n    } \n  }\n\n  const handleFont = (e) => {\n    const { value } = e.target;\n    contentRef.current.focus();\n    document.execCommand(\"fontName\", false, value);\n    console.log(value)\n  }\n\n  useEffect(() => {\n    contentRef.current.addEventListener('input', contentChange);\n  })\n\n  return (\n    <div className=\"App\">\n      <div className = \"container\">\n        <p>wysiwyg text editor</p>\n        <input className = \"title\" name = \"title\" type = \"text\" placeholder = \"title\" onChange = { handleChange } require/>\n        <input className = \"file\" name = \"file\" type = \"file\" accept = \"image/*\" onChange = { fileChange }/>\n        <div class=\"menu\"> \n          <button className = \"bold\" name = \"b\" onClick = { handleMenu }> \n            <b>B</b>\n          </button> \n          <button className = \"italic\" name = \"i\" onClick = { handleMenu }>\n            <i>I</i>\n          </button> \n          <button className = \"underline\" name = \"u\" onClick = { handleMenu }>\n            <u>U</u>\n          </button> \n          <button className = \"strike\" name = \"s\" onClick = { handleMenu }>\n            <s>S</s>\n          </button> \n          <button className = \"ordered-list\" name = \"ol\" onClick = { handleMenu }>\n            OL\n          </button> \n          <button className = \"unordered-list\" name = \"ul\" onClick = { handleMenu }>\n            UL\n          </button>\n          <select onChange = { handleFont }>\n            <option value = \"Arial\">Arial</option>\n            <option value = \"Helvetica\">Helvetica</option>\n            <option value = \"Courier New\">Courier New</option>\n          </select>\n        </div>\n        <div className = \"content\" name = \"content\" contentEditable=\"true\" ref = { contentRef }></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}